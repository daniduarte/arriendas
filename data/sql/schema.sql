CREATE TABLE Availability (id INT AUTO_INCREMENT, date_from DATETIME, date_to DATETIME, hour_from TIME, hour_to TIME, day INT, car_id INT, UNIQUE INDEX id_UNIQUE_idx (id), INDEX fk_Availability_Car1_idx (car_id), PRIMARY KEY(id, car_id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE Availability_has_Car (availability_id INT, car_id INT, INDEX fk_Availability_has_Car_Car1_idx (car_id), INDEX fk_Availability_has_Car_Availability1_idx (availability_id), PRIMARY KEY(availability_id, car_id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE Brand (id INT AUTO_INCREMENT, name VARCHAR(45), UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE Car (id INT AUTO_INCREMENT, user_id INT NOT NULL, km VARCHAR(45), city_id INT NOT NULL, address VARCHAR(45), lat FLOAT(10, 6), lng FLOAT(10, 6), offer INT, observations VARCHAR(45), price_per_hour DECIMAL(10, 2), price_per_day DECIMAL(10, 2), model_id INT NOT NULL, year INT, description VARCHAR(45), INDEX fk_Car_User_idx (user_id), INDEX fk_Car_Model1_idx (model_id), INDEX fk_Car_City1_idx (city_id), UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE City (id INT AUTO_INCREMENT, name VARCHAR(45), state_idt INT NOT NULL, lng VARCHAR(45), lat VARCHAR(45), INDEX fk_City_State1_idx (state_idt), UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE Comunas (codigointerno BIGINT, nombre VARCHAR(255), padre BIGINT NOT NULL, PRIMARY KEY(codigointerno)) DEFAULT CHARACTER SET utf8 ENGINE = MyISAM;
CREATE TABLE Conversation (id INT AUTO_INCREMENT, filed TINYINT(1) DEFAULT '0' NOT NULL, user_to_id INT NOT NULL, user_from_id INT NOT NULL, start DATETIME NOT NULL, end DATETIME, UNIQUE INDEX id_UNIQUE_idx (id), INDEX user_to_id_idx (user_to_id), INDEX user_from_id_idx (user_from_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE Country (id INT AUTO_INCREMENT, name VARCHAR(45), UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE Damages (id INT AUTO_INCREMENT, description VARCHAR(45), car_id INT NOT NULL, INDEX fk_Damages_Car1_idx (car_id), UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE Message (id INT AUTO_INCREMENT, body text NOT NULL, conversation_id INT NOT NULL, date DATETIME NOT NULL, received TINYINT(1) DEFAULT '0' NOT NULL, user_id INT NOT NULL, UNIQUE INDEX id_UNIQUE_idx (id), INDEX conversation_id_idx (conversation_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE Model (id INT AUTO_INCREMENT, name VARCHAR(45), brand_id INT NOT NULL, INDEX fk_Model_Brand1_idx (brand_id), UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE ModelPrice (id INT AUTO_INCREMENT, model_id INT NOT NULL, year VARCHAR(45), price VARCHAR(45), INDEX fk_ModelPrice_Model1_idx (model_id), UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE Photos (id INT AUTO_INCREMENT, path VARCHAR(90), type VARCHAR(45), car_id INT NOT NULL, INDEX fk_Photos_Car1_idx (car_id), UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE Rating (id INT AUTO_INCREMENT, description VARCHAR(45), user_owner_opnion VARCHAR(45), user_renter_opnion VARCHAR(45), complete TINYINT(1), qualified TINYINT(1), intime TINYINT(1), km TINYINT(1), clean_satisfied VARCHAR(45), UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE Regiones (codigo BIGINT, nombre VARCHAR(255), PRIMARY KEY(codigo)) DEFAULT CHARACTER SET utf8 ENGINE = MyISAM;
CREATE TABLE Report (id INT AUTO_INCREMENT, renter_comment VARCHAR(90), owner_comment VARCHAR(90), reserve_id INT NOT NULL, reporttype_id INT NOT NULL, INDEX fk_Report_Reserve1_idx (reserve_id), INDEX fk_Report_ReportType1_idx (reporttype_id), UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE ReportType (id INT AUTO_INCREMENT, name VARCHAR(45), UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE Reserve (id INT AUTO_INCREMENT, date DATETIME, duration INT, confirmed TINYINT(1) DEFAULT '0' NOT NULL, user_id INT NOT NULL, car_id INT NOT NULL, rating_id INT, complete TINYINT(1) DEFAULT '0' NOT NULL, INDEX fk_Reserve_User1_idx (user_id), INDEX fk_Reserve_Car1_idx (car_id), INDEX fk_Reserve_Rating1_idx (rating_id), UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE State (id INT AUTO_INCREMENT, name VARCHAR(45), country_id INT NOT NULL, INDEX fk_State_Country1_idx (country_id), UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE Transaction (id INT AUTO_INCREMENT, car VARCHAR(45), date DATETIME, price DECIMAL(10, 2), insurance DECIMAL(10, 2), commission DECIMAL(10, 2), fuel DECIMAL(10, 2), user_id INT NOT NULL, transactiontype_id INT NOT NULL, reserve_id INT, completed TINYINT(1), INDEX fk_Transaction_User1_idx (user_id), INDEX fk_Transaction_TransactionType1_idx (transactiontype_id), UNIQUE INDEX id_UNIQUE_idx (id), INDEX fk_Transaction_Reserve1_idx (reserve_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE TransactionType (id INT AUTO_INCREMENT, name VARCHAR(45), UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE User (id INT AUTO_INCREMENT, username VARCHAR(45), password VARCHAR(45), facebook_id VARCHAR(255), url VARCHAR(255), email VARCHAR(45), firstname VARCHAR(45), lastname VARCHAR(45), paypal_id VARCHAR(45), driver_license_number VARCHAR(45), driver_license_file VARCHAR(90), picture_file VARCHAR(90), telephone VARCHAR(45), identification VARCHAR(45), birthdate VARCHAR(45), country VARCHAR(45), city VARCHAR(45), hash VARCHAR(45), confirmed TINYINT(1) DEFAULT '0' NOT NULL, autoconfirm TINYINT(1) DEFAULT '0' NOT NULL, deleted TINYINT(1) DEFAULT '0' NOT NULL, confirmed_fb TINYINT(1) DEFAULT '0' NOT NULL, confirmed_sms TINYINT(1) DEFAULT '0' NOT NULL, friend_invite TINYINT(1) DEFAULT '0' NOT NULL, UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE UserAdmin (id INT AUTO_INCREMENT, username VARCHAR(45), password VARCHAR(45), firstname VARCHAR(45), lastname VARCHAR(45), UNIQUE INDEX id_UNIQUE_idx (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
ALTER TABLE Availability ADD CONSTRAINT Availability_car_id_Car_id FOREIGN KEY (car_id) REFERENCES Car(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Availability_has_Car ADD CONSTRAINT Availability_has_Car_car_id_Car_id FOREIGN KEY (car_id) REFERENCES Car(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Availability_has_Car ADD CONSTRAINT Availability_has_Car_availability_id_Availability_id FOREIGN KEY (availability_id) REFERENCES Availability(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Car ADD CONSTRAINT Car_user_id_User_id FOREIGN KEY (user_id) REFERENCES User(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Car ADD CONSTRAINT Car_model_id_Model_id FOREIGN KEY (model_id) REFERENCES Model(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Car ADD CONSTRAINT Car_city_id_City_id FOREIGN KEY (city_id) REFERENCES City(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE City ADD CONSTRAINT City_state_idt_State_id FOREIGN KEY (state_idt) REFERENCES State(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Conversation ADD CONSTRAINT Conversation_user_to_id_User_id FOREIGN KEY (user_to_id) REFERENCES User(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Conversation ADD CONSTRAINT Conversation_user_from_id_User_id FOREIGN KEY (user_from_id) REFERENCES User(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Damages ADD CONSTRAINT Damages_car_id_Car_id FOREIGN KEY (car_id) REFERENCES Car(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Message ADD CONSTRAINT Message_user_id_User_id FOREIGN KEY (user_id) REFERENCES User(id);
ALTER TABLE Message ADD CONSTRAINT Message_conversation_id_Conversation_id FOREIGN KEY (conversation_id) REFERENCES Conversation(id);
ALTER TABLE Model ADD CONSTRAINT Model_brand_id_Brand_id FOREIGN KEY (brand_id) REFERENCES Brand(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE ModelPrice ADD CONSTRAINT ModelPrice_model_id_Model_id FOREIGN KEY (model_id) REFERENCES Model(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Photos ADD CONSTRAINT Photos_car_id_Car_id FOREIGN KEY (car_id) REFERENCES Car(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Report ADD CONSTRAINT Report_reserve_id_Reserve_id FOREIGN KEY (reserve_id) REFERENCES Reserve(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Report ADD CONSTRAINT Report_reporttype_id_ReportType_id FOREIGN KEY (reporttype_id) REFERENCES ReportType(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Reserve ADD CONSTRAINT Reserve_user_id_User_id FOREIGN KEY (user_id) REFERENCES User(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Reserve ADD CONSTRAINT Reserve_rating_id_Rating_id FOREIGN KEY (rating_id) REFERENCES Rating(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Reserve ADD CONSTRAINT Reserve_car_id_Car_id FOREIGN KEY (car_id) REFERENCES Car(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE State ADD CONSTRAINT State_country_id_Country_id FOREIGN KEY (country_id) REFERENCES Country(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Transaction ADD CONSTRAINT Transaction_user_id_User_id FOREIGN KEY (user_id) REFERENCES User(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Transaction ADD CONSTRAINT Transaction_transactiontype_id_TransactionType_id FOREIGN KEY (transactiontype_id) REFERENCES TransactionType(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE Transaction ADD CONSTRAINT Transaction_reserve_id_Reserve_id FOREIGN KEY (reserve_id) REFERENCES Reserve(id);
