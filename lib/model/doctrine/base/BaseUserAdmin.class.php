<?php

/**
 * BaseUserAdmin
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $firstname
 * @property string $lastname
 * 
 * @method integer   getId()        Returns the current record's "id" value
 * @method string    getUsername()  Returns the current record's "username" value
 * @method string    getPassword()  Returns the current record's "password" value
 * @method string    getFirstname() Returns the current record's "firstname" value
 * @method string    getLastname()  Returns the current record's "lastname" value
 * @method UserAdmin setId()        Sets the current record's "id" value
 * @method UserAdmin setUsername()  Sets the current record's "username" value
 * @method UserAdmin setPassword()  Sets the current record's "password" value
 * @method UserAdmin setFirstname() Sets the current record's "firstname" value
 * @method UserAdmin setLastname()  Sets the current record's "lastname" value
 * 
 * @package    CarSharing
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserAdmin extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('UserAdmin');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('username', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('password', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('firstname', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('lastname', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));


        $this->index('id_UNIQUE', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             'type' => 'unique',
             ));
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}