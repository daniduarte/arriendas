<?php

/**
 * BaseModelPrice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $Model_id
 * @property string $year
 * @property string $price
 * @property Model $Model
 * 
 * @method integer    getId()       Returns the current record's "id" value
 * @method integer    getModelId()  Returns the current record's "Model_id" value
 * @method string     getYear()     Returns the current record's "year" value
 * @method string     getPrice()    Returns the current record's "price" value
 * @method Model      getModel()    Returns the current record's "Model" value
 * @method ModelPrice setId()       Sets the current record's "id" value
 * @method ModelPrice setModelId()  Sets the current record's "Model_id" value
 * @method ModelPrice setYear()     Sets the current record's "year" value
 * @method ModelPrice setPrice()    Sets the current record's "price" value
 * @method ModelPrice setModel()    Sets the current record's "Model" value
 * 
 * @package    CarSharing
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseModelPrice extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ModelPrice');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('Model_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('year', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('price', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));


        $this->index('fk_ModelPrice_Model1', array(
             'fields' => 
             array(
              0 => 'Model_id',
             ),
             ));
        $this->index('id_UNIQUE', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             'type' => 'unique',
             ));
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Model', array(
             'local' => 'Model_id',
             'foreign' => 'id',
             'onDelete' => 'no action',
             'onUpdate' => 'no action'));
    }
}