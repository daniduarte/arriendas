<?php

/**
 * BaseUserNotification
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $notification_id
 * @property integer $user_id
 * @property timestamp $created_at
 * @property timestamp $viewed_at
 * @property timestamp $closed_at
 * 
 *
 * @method integer          getId()                         Returns the current record's "id" value
 * @method integer          getNotificationId()             Returns the current record's "notification_id" value
 * @method integer          getUserId()                     Returns the current record's "user_id" value
 * @method timestamp        getCreatedAt()                  Returns the current record's "created_at" value
 * @method timestamp        getViewedAt()                   Returns the current record's "viewed_at" value
 * @method timestamp        getClosedAt()                   Returns the current record's "closed_at" value
 *
 * @method Car              setId()                         Sets the current record's "id" value
 * @method Car              setNotificationId()             Sets the current record's "notification_id" value
 * @method Car              setUserId()                     Sets the current record's "user_id" value
 * @method Car              setCreatedAt()                  Sets the current record's "created_at" value
 * @method Car              setViewedAt()                   Sets the current record's "viewed_at" value
 * @method Car              setClosedAt()                  Sets the current record's "closed_at" value
 *
 * @package    UserNotification
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserNotification extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('UserNotification');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('notification_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('viewed_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('closed_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));

        // Indices
        $this->hasColumn('id', 'integer', 4, array(
            'type' => 'integer',
            'primary' => true,
            'autoincrement' => true,
            'length' => 4
        ));

        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp() {

        parent::setUp();
        
        $this->hasMany('Notifications as Notification', array(
             'local' => 'notification_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'no action',
             'onUpdate' => 'no action'
        ));

    }
}