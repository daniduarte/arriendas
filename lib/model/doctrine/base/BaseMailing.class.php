<?php

/**
 * BaseMailing
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property text $description
 * @property boolean $is_active
 * 
 * @method integer         getId()                Returns the current record's "id" value
 * @method string          getName()              Returns the current record's "name" value
 * @method text            getDescription()       Returns the current record's "description" value
 * @method boolean         getIsActive()          Returns the current record's "is_active" value
 *
 * @method Mailing         setId()                Sets the current record's "id" value
 * @method Mailing         setName()              Sets the current record's "name" value
 * @method Mailing         setDescription()       Sets the current record's "description" value
 * @method Mailing         setIsActive()          Sets the current record's "is_active" value
 * 
 * @package    CarSharing
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMailing extends sfDoctrineRecord {

    public function setTableDefinition() {

        $this->setTableName('Mailing');

        $this->hasColumn('id', 'integer', 4, array(
            'type' => 'integer',
            'primary' => true,
            'autoincrement' => true,
            'length' => 4
        ));
        $this->hasColumn('name', 'string', 50, array(
            'type' => 'string',
            'notnull' => true,
            'length' => 50
        ));
        $this->hasColumn('description', 'text', null, array(
            'type' => 'text',
            'notnull' => true
        ));
        $this->hasColumn('is_active', 'boolean', false, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => false
        ));

        $this->index('id_UNIQUE', array(
            'fields' => array(0 => 'id'),
            'type' => 'unique',
        ));

        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp() {
        
        parent::setUp();
    }
}