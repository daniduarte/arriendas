<?php

/**
 * BaseReserveFile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $path
 * @property string $type
 * @property integer $Reserve_id
 * @property Reserve $Reserve
 * 
 * @method integer getId()     Returns the current record's "id" value
 * @method string  getPath()   Returns the current record's "path" value
 * @method string  getType()   Returns the current record's "type" value
 * @method integer getReserveId()  Returns the current record's "Reserve_id" value
 * @method Reserve     getReserve()    Returns the current record's "Reserve" value
 * @method ReserveFile   setId()     Sets the current record's "id" value
 * @method ReserveFile   setPath()   Sets the current record's "path" value
 * @method ReserveFile   setType()   Sets the current record's "type" value
 * @method ReserveFile   setReserveId()  Sets the current record's "Reserve_id" value
 * @method ReserveFile   setReserve()    Sets the current record's "Reserve" value
 * 
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReserveFile extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ReserveFiles');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('path', 'string', 90, array(
             'type' => 'string',
             'length' => 90,
             ));
        $this->hasColumn('type', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('Reserve_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));


        $this->index('fk_ReserveFiles_Reserve1', array(
             'fields' => 
             array(
              0 => 'Reserve_id',
             ),
             ));
        $this->index('id_UNIQUE', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             'type' => 'unique',
             ));
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Reserve', array(
             'local' => 'Reserve_id',
             'foreign' => 'id',
             'onDelete' => 'no action',
             'onUpdate' => 'no action'));
    }
}