<?php

/**
 * BaseCommune
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property Region $region
 * @property string $name
 * @property integer $code
 * @property string $slug
 * 
 * @method integer       getId()        Returns the current record's "id" value
 * @method integer       getCode()      Returns the current record's "code" value
 * @method string        getName()      Returns the current record's "name" value
 * @method Region        getRegion()    Returns the current record's "region" value
 * @method string        getSlug()      Returns the current record's "slug" value
 *
 * @method Commune       setId()        Sets the current record's "id" value
 * @method Commune       setCode()      Sets the current record's "code" value
 * @method Commune       setName()      Sets the current record's "name" value
 * @method Commune       setRegion()    Sets the current record's "region" value
 * @method Commune       setSlug()      Sets the current record's "slug" value
 * 
 * @package    CommuneSharing
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCommune extends sfDoctrineRecord {

    public function setTableDefinition() {

        $this->setTableName('Commune');

        $this->hasColumn('id', 'integer', 11, array(
            'primary' => true,
            'autoincrement' => true
        ));
        $this->hasColumn('code', 'integer', null, array(
            'notnull' => true
        ));
        $this->hasColumn('name', 'string', 255, array(
            'notnull' => true
        ));
        $this->hasColumn('region_id', 'integer', 11, array(
            'notnull' => true
        ));
        $this->hasColumn('slug', 'string', 100, array(
            'notnull' => true
        ));

        $this->index('id_UNIQUE', array(
            'fields' => array(
                0 => 'id',
            ),
            'type' => 'unique',
        ));
        $this->index('fk_Commune_Region', array(
            'fields' => array(
                0 => 'region_id',
            ),
        ));
        
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp() {

        parent::setUp();

        $this->hasOne('Region', array(
            'local' => 'region_id',
            'foreign' => 'id',
            'onDelete' => 'no action',
            'onUpdate' => 'no action'
        ));
    }
}