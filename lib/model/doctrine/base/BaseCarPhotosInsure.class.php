<?php

/**
 * BaseCarPhotosInsure
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $car_id
 * @property string  $perfil
 * @property string  $frente
 * @property string  $costado_derecho
 * @property string  $costado_izquierdo
 * @property string  $trasero_derecho
 * @property string  $trasero_izquierdo
 * @property string  $rueda_delantera_derecha
 * @property string  $rueda_delantera_izquierda
 * @property string  $rueda_trasera_derecha
 * @property string  $rueda_trasera_izquierda
 * @property string  $rueda_repuesto
 * @property string  $accesorio_uno
 * @property string  $accesorio_dos
 * @property string  $panel
 * @property string  $padron_frente
 * @property string  $padron_reverso
 * @property Car     $car
 * 
 * @method integer          getId()                         Returns the current record's "id" value
 * @method integer          getCarId()                      Returns the current record's "car_id" value
 * @method string           getPerfil()                     Returns the current record's "perfil" value
 * @method string           getFrente()                     Returns the current record's "frente" value
 * @method string           getCostadoDerecho()             Returns the current record's "costado_derecho" value
 * @method string           getCostadoIzquierdo()           Returns the current record's "costado_izquierdo" value
 * @method string           getTraseroDerecho()             Returns the current record's "trasero_derecho" value
 * @method string           getTraseroIzquierdo()           Returns the current record's "trasero_izquierdo" value
 * @method string           getRuedaDelanteraDerecha()      Returns the current record's "rueda_delantera_derecha" value
 * @method string           getRuedaDelanteraIzquierda()    Returns the current record's "rueda_delantera_izquierda" value
 * @method string           getRuedaTraseraDerecha()        Returns the current record's "rueda_trasera_derecha" value
 * @method string           getRuedaTraseraIzquierda()      Returns the current record's "rueda_trasera_izquierda" value
 * @method string           getRuedaRepuesto()              Returns the current record's "rueda_repuesto" value
 * @method string           getAccesorioUno()               Returns the current record's "accesorio_uno" value
 * @method string           getAccesorioDos()               Returns the current record's "accesorio_dos" value
 * @method string           getPanel()                      Returns the current record's "panel" value
 * @method string           getPadronFrente()               Returns the current record's "padron_frente" value
 * @method string           getPadronReverso()              Returns the current record's "padron_reverso" value
 * @method car              getCar()                        Returns the current record's "car" value
 *
 * @method Car              setId()                         Sets the current record's "id" value
 * @method Car              setCarId()                      Sets the current record's "car_id" value
 * @method Car              setPerfil()                     Sets the current record's "perfil" value
 * @method Car              setFrente()                     Sets the current record's "frente" value
 * @method Car              setCostadoDerecho()             Sets the current record's "costado_derecho" value
 * @method Car              setCostadoIzquierdo()           Sets the current record's "costado_izquierdo" value
 * @method Car              setTraseroDerecho()             Sets the current record's "trasero_derecho" value
 * @method Car              setTraseroIzquierdo()           Sets the current record's "trasero_izquierdo" value
 * @method Car              setRuedaDelanteraDerecha()      Sets the current record's "rueda_delantera_derecha" value
 * @method Car              setRuedaDelanteraIzquierda()    Sets the current record's "rueda_delantera_izquierda" value
 * @method Car              setRuedaTraseraDerecha()        Sets the current record's "rueda_trasera_derecha" value
 * @method Car              setRuedaTraseraIzquierda()      Sets the current record's "rueda_trasera_izquierda" value
 * @method Car              setRuedaRepuesto()              Sets the current record's "rueda_repuesto" value
 * @method Car              setAccesorioUno()               Sets the current record's "accesorio_uno" value
 * @method Car              setAccesorioDos()               Sets the current record's "accesorio_dos" value
 * @method Car              setPanel()                      Sets the current record's "panel" value
 * @method Car              setPadronFrente()               Sets the current record's "padron_frente" value
 * @method Car              setPadronReverso()              Sets the current record's "padron_reverso" value
 * @method Car              setCar()                        Sets the current record's "otros" car
 *
 * @package    CarPhotosInsure
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCarPhotosInsure extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('CarPhotosInsure');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('car_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('perfil', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('frente', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('costado_derecho', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('costado_izquierdo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('trasero_derecho', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('trasero_izquierdo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('rueda_delantera_derecha', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('rueda_delantera_izquierda', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('rueda_trasera_derecha', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('rueda_trasera_izquierda', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('rueda_repuesto', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('accesorio_uno', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('accesorio_dos', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('panel', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('padron_frente', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('padron_reverso', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        // Indices
        $this->index('fk_CarAudioAccessories_Car', array(
            'fields' => array(
                0 => 'car_id',
            ),
        ));
        $this->index('id_UNIQUE', array(
            'fields' => array(
                0 => 'id',
            ),
            'type' => 'unique',
        ));

        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp() {

        parent::setUp();
        
        $this->hasOne('Car', array(
             'local' => 'car_id',
             'foreign' => 'id',
             'onDelete' => 'no action',
             'onUpdate' => 'no action'
        ));

    }
}