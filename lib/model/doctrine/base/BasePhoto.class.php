<?php

/**
 * BasePhoto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $path
 * @property string $type
 * @property integer $Car_id
 * @property Car $Car
 * 
 * @method integer getId()     Returns the current record's "id" value
 * @method string  getPath()   Returns the current record's "path" value
 * @method string  getType()   Returns the current record's "type" value
 * @method integer getCarId()  Returns the current record's "Car_id" value
 * @method Car     getCar()    Returns the current record's "Car" value
 * @method Photo   setId()     Sets the current record's "id" value
 * @method Photo   setPath()   Sets the current record's "path" value
 * @method Photo   setType()   Sets the current record's "type" value
 * @method Photo   setCarId()  Sets the current record's "Car_id" value
 * @method Photo   setCar()    Sets the current record's "Car" value
 * 
 * @package    CarSharing
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePhoto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('Photos');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('path', 'string', 90, array(
             'type' => 'string',
             'length' => 90,
             ));
        $this->hasColumn('type', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('Car_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));


        $this->index('fk_Photos_Car1', array(
             'fields' => 
             array(
              0 => 'Car_id',
             ),
             ));
        $this->index('id_UNIQUE', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             'type' => 'unique',
             ));
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Car', array(
             'local' => 'Car_id',
             'foreign' => 'id',
             'onDelete' => 'no action',
             'onUpdate' => 'no action'));
    }
}