<?php

/**
 * BaseOportunityEmailQueue
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $renter_id
 * @property integer $owner_id
 * @property integer $reserve_id
 * @property timestamp $created_at
 * @property timestamp $sended_at
 * @property timestamp $opened_at
 * @property User $Renter
 * @property User $Owner
 * @property Reserve $Reserve
 * 
 * @method integer              getId()         Returns the current record's "id" value
 * @method integer              getRenterId()   Returns the current record's "renter_id" value
 * @method integer              getOwnerId()    Returns the current record's "owner_id" value
 * @method integer              getReserveId()  Returns the current record's "reserve_id" value
 * @method timestamp            getCreatedAt()  Returns the current record's "created_at" value
 * @method timestamp            getSendedAt()   Returns the current record's "sended_at" value
 * @method timestamp            getOpenedAt()   Returns the current record's "opened_at" value
 * @method User                 getRenter()     Returns the current record's "Renter" value
 * @method User                 getOwner()      Returns the current record's "Owner" value
 * @method Reserve              getReserve()    Returns the current record's "Reserve" value
 * @method OportunityEmailQueue setId()         Sets the current record's "id" value
 * @method OportunityEmailQueue setRenterId()   Sets the current record's "renter_id" value
 * @method OportunityEmailQueue setOwnerId()    Sets the current record's "owner_id" value
 * @method OportunityEmailQueue setReserveId()  Sets the current record's "reserve_id" value
 * @method OportunityEmailQueue setCreatedAt()  Sets the current record's "created_at" value
 * @method OportunityEmailQueue setSendedAt()   Sets the current record's "sended_at" value
 * @method OportunityEmailQueue setOpenedAt()   Sets the current record's "opened_at" value
 * @method OportunityEmailQueue setRenter()     Sets the current record's "Renter" value
 * @method OportunityEmailQueue setOwner()      Sets the current record's "Owner" value
 * @method OportunityEmailQueue setReserve()    Sets the current record's "Reserve" value
 * 
 * @package    CarSharing
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOportunityEmailQueue extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('OportunityEmailQueue');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('renter_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('owner_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('reserve_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('sended_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('opened_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User as Renter', array(
             'local' => 'renter_id',
             'foreign' => 'id',
             'onDelete' => 'no action',
             'onUpdate' => 'no action'));

        $this->hasOne('User as Owner', array(
             'local' => 'owner_id',
             'foreign' => 'id',
             'onDelete' => 'no action',
             'onUpdate' => 'no action'));

        $this->hasOne('Reserve', array(
             'local' => 'reserve_id',
             'foreign' => 'id',
             'onDelete' => 'no action',
             'onUpdate' => 'no action'));
    }
}